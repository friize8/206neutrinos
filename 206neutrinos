#!/usr/bin/env python3

from math import sqrt
import sys

def error():
    arr = []
    i = 1
    try:
        while (i < len(sys.argv)):
            arr.append(int(sys.argv[i]))
            if (arr[i - 1] < 0):
                sys.exit(84)
            i += 1
    except:
        usage()
        exit(84)
    return arr

def usage():
    print("USAGE")
    print("\t./206neutrinos n a h sd\n")
    print("DESCRIPTION")
    print("\tn number of values")
    print("\ta arithmetic mean")
    print("\th harmonic mean")
    print("\tsd standard deviation")

def check_input(input):
    if input == "END":
        exit(0)
    try:
        a = float(input)
        if a < 0:
            exit(84)
    except:
        exit(84)
    return a

def compute(arr, i):
    total = arr[1] * arr[0]
    temp = (arr[3] * arr[3] + arr[1] * arr[1]) * arr[0]
    arr[0] = arr[0] + 1
    arr[1] = (total + i) / arr[0]
    arr[3] = sqrt(((temp + pow(i, 2)) / arr[0]) - pow(arr[1], 2))
    arr[2] = arr[0] / ((1 / i) + ((arr[0] - 1) / arr[2]))
    return arr

def print_funct(arr, mean_square):
    print ("\tNumber of values:\t%d" % arr[0])
    print ("\tStandard deviation:\t%.2f" % arr[3])
    print ("\tArithmetic mean:\t%.2f" % arr[1])
    print ("\tRoot mean square:\t%.2f" % mean_square)
    print ("\tHarmonic mean:\t\t%.2f\n" % arr[2])

def neutrinos(arr):
    while (True):
        input_value = input("Enter next value: ")
        a = check_input(input_value)
        mem = (arr[3] * arr[3] + arr[1] * arr[1]) * arr[0]
        compute(arr, a)
        mean_square = sqrt((mem + pow(a, 2)) / arr[0])
        print_funct(arr, mean_square)


def main():
    if (len(sys.argv) == 5):
        args = error()
        if args[2] < 0 or args[2] == 0:
            exit(84)
        neutrinos(args)
    else:
        exit(84)
    exit(0)

main()